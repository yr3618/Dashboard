{"ast":null,"code":"var _jsxFileName = \"/Users/mac/demo-application/src/Views/First-Challenge.js\";\n\n/* App.js */\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar CanvasJSReact = require('./canvasjs.react');\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar startTime = 0,\n    endTime = 0;\n\nclass LineChart extends Component {\n  componentDidMount() {\n    endTime = new Date();\n    document.getElementById(\"timeToRender\").innerHTML = \"Time to Render: \" + (endTime - startTime) + \"ms\";\n  }\n\n  render() {\n    var limit = 50000;\n    var y = 100;\n    var data = [];\n    var dataSeries = {\n      type: \"line\"\n    };\n    var dataPoints = [];\n\n    for (var i = 0; i < limit; i += 1) {\n      y += Math.round(Math.random() * 10 - 5);\n      dataPoints.push({\n        x: i,\n        y: y\n      });\n    }\n\n    dataSeries.dataPoints = dataPoints;\n    data.push(dataSeries);\n    const spanStyle = {\n      position: 'absolute',\n      top: '10px',\n      fontSize: '20px',\n      fontWeight: 'bold',\n      backgroundColor: '#d85757',\n      padding: '0px 4px',\n      color: '#ffffff'\n    };\n    const options = {\n      zoomEnabled: true,\n      animationEnabled: true,\n      title: {\n        text: \"Try Zooming - Panning\"\n      },\n      data: data // random data\n\n    };\n    startTime = new Date();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options,\n        onRef: ref => this.chart = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"timeToRender\",\n        style: spanStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/mac/demo-application/src/Views/First-Challenge.js"],"names":["Home","React","require","Component","CanvasJSReact","CanvasJS","CanvasJSChart","startTime","endTime","LineChart","componentDidMount","Date","document","getElementById","innerHTML","render","limit","y","data","dataSeries","type","dataPoints","i","Math","round","random","push","x","spanStyle","position","top","fontSize","fontWeight","backgroundColor","padding","color","options","zoomEnabled","animationEnabled","title","text","ref","chart"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,QAAjB;;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;;AACA,IAAIC,aAAa,GAAGF,OAAO,CAAC,kBAAD,CAA3B;;AACA,IAAIG,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAAA,IAAmBC,OAAO,GAAG,CAA7B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC9BO,EAAAA,iBAAiB,GAAG;AAChBF,IAAAA,OAAO,GAAG,IAAIG,IAAJ,EAAV;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoD,sBAAsBN,OAAO,GAAGD,SAAhC,IAA6C,IAAjG;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,KAAZ;AACA,QAAIC,CAAC,GAAG,GAAR;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,UAAU,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAApB,EAA2BM,CAAC,IAAI,CAAhC,EAAmC;AAC/BL,MAAAA,CAAC,IAAIM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAAhC,CAAL;AACAJ,MAAAA,UAAU,CAACK,IAAX,CAAgB;AACZC,QAAAA,CAAC,EAAEL,CADS;AAEZL,QAAAA,CAAC,EAAEA;AAFS,OAAhB;AAIH;;AACDE,IAAAA,UAAU,CAACE,UAAX,GAAwBA,UAAxB;AACAH,IAAAA,IAAI,CAACQ,IAAL,CAAUP,UAAV;AAEA,UAAMS,SAAS,GAAG;AACdC,MAAAA,QAAQ,EAAC,UADK;AAEdC,MAAAA,GAAG,EAAE,MAFS;AAGdC,MAAAA,QAAQ,EAAE,MAHI;AAIdC,MAAAA,UAAU,EAAE,MAJE;AAKdC,MAAAA,eAAe,EAAE,SALH;AAMdC,MAAAA,OAAO,EAAE,SANK;AAOdC,MAAAA,KAAK,EAAE;AAPO,KAAlB;AAUA,UAAMC,OAAO,GAAG;AACZC,MAAAA,WAAW,EAAE,IADD;AAEZC,MAAAA,gBAAgB,EAAE,IAFN;AAGZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OAHK;AAMZtB,MAAAA,IAAI,EAAEA,IANM,CAMA;;AANA,KAAhB;AASAX,IAAAA,SAAS,GAAG,IAAII,IAAJ,EAAZ;AAEA,wBACI;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,OAAO,EAAIyB,OAA1B;AACe,QAAA,KAAK,EAAEK,GAAG,IAAI,KAAKC,KAAL,GAAaD;AAD1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,KAAK,EAAEb;AAA/B;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AArD6B;;AAuDlC,eAAenB,SAAf","sourcesContent":["/* App.js */\nimport Home from \"./Home\";\n\nvar React = require('react');\nvar Component = React.Component;\nvar CanvasJSReact = require('./canvasjs.react');\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar startTime = 0, endTime = 0;\n\nclass LineChart extends Component {\n    componentDidMount() {\n        endTime = new Date();\n        document.getElementById(\"timeToRender\").innerHTML = \"Time to Render: \" + (endTime - startTime) + \"ms\";\n    }\n\n    render() {\n        var limit = 50000;\n        var y = 100;\n        var data = [];\n        var dataSeries = { type: \"line\" };\n        var dataPoints = [];\n\n        for (var i = 0; i < limit; i += 1) {\n            y += Math.round(Math.random() * 10 - 5);\n            dataPoints.push({\n                x: i,\n                y: y\n            });\n        }\n        dataSeries.dataPoints = dataPoints;\n        data.push(dataSeries);\n\n        const spanStyle = {\n            position:'absolute',\n            top: '10px',\n            fontSize: '20px',\n            fontWeight: 'bold',\n            backgroundColor: '#d85757',\n            padding: '0px 4px',\n            color: '#ffffff'\n        }\n\n        const options = {\n            zoomEnabled: true,\n            animationEnabled: true,\n            title: {\n                text: \"Try Zooming - Panning\"\n            },\n            data: data  // random data\n        }\n\n        startTime = new Date();\n\n        return (\n            <div>\n                <CanvasJSChart options = {options}\n                               onRef={ref => this.chart = ref}\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n                <span id=\"timeToRender\" style={spanStyle}></span>\n            </div>\n        );\n    }\n}\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}